#!/bin/bash

MASTER_CONTAINER=otbook-db_alpha-1
MASTER_USER=root
MASTER_PASSWORD=123456
SOURCE_HOST=db_alpha

REPL_USER_NAME=repl
REPL_USER_PASSWORD=123456

REPLICA_1_CONTAINER=otbook-db_bravo-1
REPLICA_1_USER=root
REPLICA_1_PASSWORD=123456

REPLICA_2_CONTAINER=otbook-db_charlie-1
REPLICA_2_USER=root
REPLICA_2_PASSWORD=123456

REPLICAS_COUNT=2

# creating a user for replication
docker container exec $MASTER_CONTAINER mysql --user=$MASTER_USER --password=$MASTER_PASSWORD \
    --execute="CREATE USER '$REPL_USER_NAME'@'%' IDENTIFIED BY '$REPL_USER_PASSWORD';GRANT REPLICATION SLAVE ON *.* TO '$REPL_USER_NAME'@'%';"

# obtaining the replication source binary log coordinates
LOG_COORDINATES=$(docker container exec $MASTER_CONTAINER mysql --user=$MASTER_USER --password=$MASTER_PASSWORD --execute='SHOW MASTER STATUS;' | awk '{print $1":"$2}' | tail -n 1)
LOG_FILE=$(echo $LOG_COORDINATES | cut -f 1 -d :)
LOG_POS=$(echo $LOG_COORDINATES | cut -f 2 -d :)

# making data snapshot
docker container exec $MASTER_CONTAINER mysqldump --user=$MASTER_USER --password=$MASTER_PASSWORD --databases otbook --source-data > dbdump.sql

# running each replica
for i in $(seq 1 $REPLICAS_COUNT)
do
    CONTAINER_VAR=REPLICA_${i}_CONTAINER
    USER_VAR=REPLICA_${i}_USER
    PASSWORD_VAR=REPLICA_${i}_PASSWORD

    docker container exec -i ${!CONTAINER_VAR} mysql --user=${!USER_VAR} --password=${!PASSWORD_VAR} otbook < dbdump.sql
    docker container exec ${!CONTAINER_VAR} mysql --user=${!USER_VAR} --password=${!PASSWORD_VAR} --execute "CHANGE REPLICATION SOURCE TO
            SOURCE_HOST='${SOURCE_HOST}',
            SOURCE_USER='${REPL_USER_NAME}',
            SOURCE_PASSWORD='${REPL_USER_PASSWORD}',
            SOURCE_LOG_FILE='${LOG_FILE}',
            SOURCE_LOG_POS=${LOG_POS},
            GET_SOURCE_PUBLIC_KEY=1;
            START REPLICA"
done

rm dbdump.sql
